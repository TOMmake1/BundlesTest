[{"__type__":"cc.Material","_name":"water-material","_effectAsset":{"__uuid__":"7aVD0dMPxDC5Pceh743R1H"},"_techniqueData":{}},{"__type__":"cc.EffectAsset","_name":"water","techniques":[{"passes":[{"blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"u_normalMap":{"value":"white","type":29},"alphaThreshold":{"value":[0.5],"type":13}},"program":"water|vs|fs"}]}],"shaders":[{"hash":4059723713,"glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_nativeSize;\n  highp   mat4 cc_matView;\n  mediump mat4 cc_matViewInv;\n  mediump mat4 cc_matProj;\n  mediump mat4 cc_matProjInv;\n  mediump mat4 cc_matViewProj;\n  mediump mat4 cc_matViewProjInv;\n  mediump vec4 cc_cameraPos;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\n  precision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nuniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_nativeSize;\n  highp   mat4 cc_matView;\n  mediump mat4 cc_matViewInv;\n  mediump mat4 cc_matProj;\n  mediump mat4 cc_matProjInv;\n  mediump mat4 cc_matViewProj;\n  mediump mat4 cc_matViewProjInv;\n  mediump vec4 cc_cameraPos;\n};\nin vec2 v_uv0;\nin vec4 v_color;\nuniform sampler2D u_normalMap;\nuniform sampler2D texture;\nuniform Constant {\n    vec2 itime;\n};\nvec3 waveNormal(vec2 p) {\n    vec3 normal = texture2D(u_normalMap, p).xyz;\n    normal.x *= 0.1;\n    normal.y *= 0.1;\n    return normalize(normal);\n}\nvoid main() {\n    float timeFactor = 0.1;\n    float offsetFactor = 0.5;\n    float refractionFactor = 0.6;\n    vec3 normal = waveNormal(v_uv0 + vec2( itime.x*1.0 * timeFactor,  itime.y*0.1 * timeFactor));\n    vec2 p = v_uv0;\n    vec3 eyePos = vec3(0, 0, 10);\n    vec3 inVec = normalize(vec3(p, 0) - eyePos);\n    vec3 refractVec = refract(inVec, normal, refractionFactor);\n    vec2 v_texCoordN = v_uv0;\n    v_texCoordN += refractVec.xy *0.6;\n    gl_FragColor = texture2D(texture, v_texCoordN)*v_color;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mediump mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\n  precision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec2 v_uv0;\nvarying vec4 v_color;\nuniform sampler2D u_normalMap;\nuniform sampler2D texture;\nuniform vec2 itime;\nvec3 waveNormal(vec2 p) {\n    vec3 normal = texture2D(u_normalMap, p).xyz;\n    normal.x *= 0.1;\n    normal.y *= 0.1;\n    return normalize(normal);\n}\nvoid main() {\n    float timeFactor = 0.1;\n    float offsetFactor = 0.5;\n    float refractionFactor = 0.6;\n    vec3 normal = waveNormal(v_uv0 + vec2( itime.x*1.0 * timeFactor,  itime.y*0.1 * timeFactor));\n    vec2 p = v_uv0;\n    vec3 eyePos = vec3(0, 0, 10);\n    vec3 inVec = normalize(vec3(p, 0) - eyePos);\n    vec3 refractVec = refract(inVec, normal, refractionFactor);\n    vec2 v_texCoordN = v_uv0;\n    v_texCoordN += refractVec.xy *0.6;\n    gl_FragColor = texture2D(texture, v_texCoordN)*v_color;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"],"binding":0},{"name":"Constant","members":[{"name":"itime","type":14,"count":1}],"defines":[],"binding":1}],"samplers":[{"name":"u_normalMap","type":29,"count":1,"defines":[],"binding":30},{"name":"texture","type":29,"count":1,"defines":[],"binding":31}],"record":null,"name":"water|vs|fs"}]}]